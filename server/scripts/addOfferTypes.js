const mongoose = require('mongoose');
require('dotenv').config();

const Offer = require('../models/Offer');

async function addOfferTypes() {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ Connect√© √† MongoDB\n');

    // R√©cup√©rer toutes les offres
    const offers = await Offer.find();
    console.log(`üìä ${offers.length} offres trouv√©es\n`);

    let updated = 0;

    for (const offer of offers) {
      // Ajouter offerType bas√© sur le type existant
      // Le champ "type" dans le mod√®le repr√©sente d√©j√† le type d'offre (Personnel, VTC, Livraison, etc.)
      // On va juste s'assurer qu'il est bien d√©fini
      
      const updates = {};
      
      // Si le type existe, on le garde tel quel
      // Le type dans le mod√®le Offer est d√©j√† le type d'offre
      if (offer.type) {
        updates.offerType = offer.type;
        updated++;
        
        console.log(`‚úÖ ${offer.title}`);
        console.log(`   Type d'offre: ${offer.type}`);
        console.log(`   Type de contrat: ${offer.contractType || 'N/A'}\n`);
        
        await Offer.findByIdAndUpdate(offer._id, { 
          $set: updates
        });
      }
    }

    console.log(`\nüìä R√©sum√©:`);
    console.log(`   Total: ${offers.length} offres`);
    console.log(`   Mises √† jour: ${updated} offres\n`);

    console.log('‚úÖ Tous les types d\'offre ont √©t√© ajout√©s!');

  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
  } finally {
    await mongoose.connection.close();
    console.log('üëã Connexion ferm√©e');
  }
}

addOfferTypes();
