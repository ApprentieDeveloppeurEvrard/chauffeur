const mongoose = require('mongoose');
require('dotenv').config();

const User = require('./models/User');

async function fixRole() {
  try {
    // R√©cup√©rer l'email et le r√¥le depuis les arguments de ligne de commande
    const email = process.argv[2];
    const newRole = process.argv[3] || 'employer';

    if (!email) {
      console.log('‚ùå Usage: node fix-role.js <email> [role]');
      console.log('Exemple: node fix-role.js user@example.com employer');
      console.log('R√¥les disponibles: employer, driver');
      process.exit(1);
    }

    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ Connect√© √† MongoDB');

    // Corriger le r√¥le
    const result = await User.updateOne(
      { email: email },
      { $set: { role: newRole } }
    );

    console.log('\nüìä R√©sultat de la mise √† jour:');
    console.log('- Documents trouv√©s:', result.matchedCount);
    console.log('- Documents modifi√©s:', result.modifiedCount);

    // V√©rifier le r√©sultat
    const user = await User.findOne({ email: email });
    
    if (user) {
      console.log('\n‚úÖ Utilisateur mis √† jour:');
      console.log('- Email:', user.email);
      console.log('- Nom:', user.firstName, user.lastName);
      console.log('- R√¥le:', user.role);
      console.log('\nüéâ Le r√¥le a √©t√© corrig√© avec succ√®s !');
      console.log('üëâ D√©connectez-vous et reconnectez-vous pour voir les 2 options.');
    } else {
      console.log('\n‚ùå Utilisateur non trouv√© avec cet email');
    }

    await mongoose.connection.close();
    process.exit(0);
  } catch (error) {
    console.error('\n‚ùå Erreur:', error.message);
    process.exit(1);
  }
}

fixRole();
